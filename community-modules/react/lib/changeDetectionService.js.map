{"version":3,"sources":["changeDetectionService.ts"],"names":[],"mappings":"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","file":"changeDetectionService.js","sourcesContent":["export enum ChangeDetectionStrategyType {\n  IdentityCheck = 'IdentityCheck',\n  DeepValueCheck = 'DeepValueCheck',\n  NoCheck = 'NoCheck',\n}\n\nexport class ChangeDetectionService {\n  private strategyMap: {\n    [key in ChangeDetectionStrategyType]: ChangeDetectionStrategy;\n  } = {\n    [ChangeDetectionStrategyType.DeepValueCheck]: new DeepValueStrategy(),\n    [ChangeDetectionStrategyType.IdentityCheck]: new SimpleFunctionalStrategy(\n      (a, b) => a === b,\n    ),\n    [ChangeDetectionStrategyType.NoCheck]: new SimpleFunctionalStrategy(\n      (a, b) => true,\n    ),\n  };\n\n  public getStrategy(\n    changeDetectionStrategy: ChangeDetectionStrategyType,\n  ): ChangeDetectionStrategy {\n    return this.strategyMap[changeDetectionStrategy];\n  }\n}\n\nexport interface ChangeDetectionStrategy {\n  areEqual(a: any, b: any): boolean;\n}\n\nclass SimpleFunctionalStrategy implements ChangeDetectionStrategy {\n  private strategy: (a: any, b: any) => boolean;\n\n  constructor(strategy: (a: any, b: any) => boolean) {\n    this.strategy = strategy;\n  }\n\n  areEqual(a: any, b: any): boolean {\n    return this.strategy(a, b);\n  }\n}\n\nclass DeepValueStrategy implements ChangeDetectionStrategy {\n  areEqual(a: any, b: any): boolean {\n    return DeepValueStrategy.areEquivalent(\n      DeepValueStrategy.copy(a),\n      DeepValueStrategy.copy(b),\n    );\n  }\n\n  /*\n   * deeper object comparison - taken from https://stackoverflow.com/questions/1068834/object-comparison-in-javascript\n   */\n  static unwrapStringOrNumber(obj: any) {\n    return obj instanceof Number || obj instanceof String ? obj.valueOf() : obj;\n  }\n\n  // sigh, here for ie compatibility\n  static copy(value: any): any {\n    if (!value) {\n      return value;\n    }\n\n    if (Array.isArray(value)) {\n      // shallow copy the array - this will typically be either rowData or columnDefs\n      const arrayCopy = [];\n      for (let i = 0; i < value.length; i++) {\n        arrayCopy.push(this.copy(value[i]));\n      }\n      return arrayCopy;\n    }\n\n    // for anything without keys (boolean, string etc).\n    // Object.keys - chrome will swallow them, IE will fail (correctly, imho)\n    if (typeof value !== 'object') {\n      return value;\n    }\n\n    return [{}, value].reduce((r, o) => {\n      Object.keys(o).forEach(function (k) {\n        r[k] = o[k];\n      });\n      return r;\n    }, {});\n  }\n\n  static isNaN(value: any) {\n    if (Number.isNaN) {\n      return Number.isNaN(value);\n    }\n    // for ie11...\n    return typeof value === 'number' && isNaN(value);\n  }\n  /*\n   * slightly modified, but taken from https://stackoverflow.com/questions/1068834/object-comparison-in-javascript\n   *\n   * What we're trying to do here is determine if the property being checked has changed in _value_, not just in reference\n   *\n   * For eg, if a user updates the columnDefs via property binding, but the actual columns defs are the same before and\n   * after, then we don't want the grid to re-render\n   */\n  static areEquivalent(a: any, b: any) {\n    a = DeepValueStrategy.unwrapStringOrNumber(a);\n    b = DeepValueStrategy.unwrapStringOrNumber(b);\n    if (a === b) return true; //e.g. a and b both null\n    if (a === null || b === null || typeof a !== typeof b) return false;\n    if (DeepValueStrategy.isNaN(a) && DeepValueStrategy.isNaN(b)) {\n      return true;\n    }\n    if (a instanceof Date) {\n      return b instanceof Date && a.valueOf() === b.valueOf();\n    }\n    if (typeof a === 'function') {\n      return a.toString() === b.toString();\n    }\n    if (typeof a !== 'object') {\n      return a == b; //for boolean, number, string, function, xml\n    }\n\n    const newA = a.areEquivPropertyTracking === undefined,\n      newB = b.areEquivPropertyTracking === undefined;\n    try {\n      let prop;\n      if (newA) {\n        a.areEquivPropertyTracking = [];\n      } else if (\n        a.areEquivPropertyTracking.some(function (other: any) {\n          return other === b;\n        })\n      )\n        return true;\n      if (newB) {\n        b.areEquivPropertyTracking = [];\n      } else if (b.areEquivPropertyTracking.some((other: any) => other === a)) {\n        return true;\n      }\n      a.areEquivPropertyTracking.push(b);\n      b.areEquivPropertyTracking.push(a);\n\n      const tmp = {};\n      for (prop in a)\n        if (prop != 'areEquivPropertyTracking') {\n          (tmp as any)[prop] = null;\n        }\n      for (prop in b)\n        if (prop != 'areEquivPropertyTracking') {\n          (tmp as any)[prop] = null;\n        }\n\n      for (prop in tmp) {\n        if (!this.areEquivalent(a[prop], b[prop])) {\n          return false;\n        }\n      }\n      return true;\n    } finally {\n      if (newA) delete a.areEquivPropertyTracking;\n      if (newB) delete b.areEquivPropertyTracking;\n    }\n  }\n}\n"]}